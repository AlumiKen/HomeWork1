@model IEnumerable<homework1.Models.客戶資料>

@section scripts {
    <link href="~/Content/PagedList.css" rel="stylesheet" />

    <script>
        $(function () {
            $('.pagination-container a').on('click', function () {
                var href = $(this).attr('href');//找到分頁的超連結
                var pageNumber = href.substring(href.indexOf('?page=') + 6);//抓出分頁值
                document.form1.page.value = pageNumber;//把值塞到page隱藏欄位
                document.form1.submit();
                return false;
            })
        })

        function SortOrder(name) {
            if (document.form1.sortOrder.value.indexOf('desc') > 0) {
                document.form1.sortOrder.value = name;
            }
            else {
                document.form1.sortOrder.value = name + ' desc';
            }
            document.form1.submit();
            return false;
        }
    </script>

}

<h2>客戶資料管理</h2>

@using (Html.BeginForm("Index", "客戶資料", FormMethod.Get, new { name = "form1" }))
{
    @Html.Hidden("sortOrder")
    @Html.Hidden("page")

    <p>
        <table>
            <tr>
                <td>
                    @Html.ActionLink("Create New", "Create") |
                </td>
                <td>
                    關鍵字 :
                </td>
                <td>
                    <table>
                        <tr>
                            <td>
                                @Html.TextBox("keyword")
                            </td>
                            <td>
                                <table>
                                    <tr>
                                        <td>
                                            | 客戶分類:
                                        </td>
                                        <td>
                                            @Html.DropDownList("客戶分類Id", null, "全部", htmlAttributes: new { @class = "form-control", onchange = "document.form1.page.value = 1;this.form.submit();" })
                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td>
                                <input type="submit" value="搜尋" class="btn btn-default" onclick="javascript:document.form1.page.value = 1;" />
                            </td>
                        </tr>
                    </table>
                </td>
                <td>
                    <input type="submit" value="匯出清單" class="btn btn-default" formaction=@Url.Action("匯出客戶資料") />
                </td>
            </tr>
        </table>
    </p>


    <table class="table">
        <tr>
            <th>
                @*@Html.ActionLink("客戶名稱", "Index", null, new { onclick = "return SortOrder('客戶名稱');" })*@
                <a href="@Url.Action("Index", "客戶資料")" onclick="return SortOrder('客戶名稱');">
                    @Html.DisplayNameFor(model => model.客戶名稱)
                </a>
            </th>
            <th>
                @Html.ActionLink("統一編號", "Index", null, new { onclick = "return SortOrder('統一編號');" })
            </th>
            <th>
                @Html.ActionLink("電話", "Index", null, new { onclick = "return SortOrder('電話');" })
            </th>
            <th>
                @Html.ActionLink("傳真", "Index", null, new { onclick = "return SortOrder('傳真');" })
            </th>
            <th>
                @Html.ActionLink("地址", "Index", null, new { onclick = "return SortOrder('地址');" })
            </th>
            <th>
                @Html.ActionLink("Email", "Index", null, new { onclick = "return SortOrder('Email');" })
            </th>
            <th>
                @Html.ActionLink("Account", "Index", null, new { onclick = "return SortOrder('Account');" })
            </th>
            <th>
                @Html.ActionLink("客戶分類名稱", "Index", null, new { onclick = "return SortOrder('客戶分類名稱');" })
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.客戶名稱)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.統一編號)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.電話)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.傳真)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.地址)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Account)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.客戶分類.客戶分類名稱)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>

    @Html.PagedListPager(Model as IPagedList, page => Url.Action("Index", new { page }))
}

PagedListPager(Model as IPagedList, page => Url.Action("Index", new { page }))
{
    會先處理傳入的Model,產生出畫面上要顯示的頁碼List<int>　pageList
    例如
    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, ..., >, >>
    <<, < 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, ..., >, >>

    產生出來的每個頁碼html會長成這樣
    <a href="PageUrl">頁碼</a>

    foreach (var page in pageList)
    {
        對每個頁碼都會呼叫Func函數，回傳我們設定好的回傳值expression
        把回傳值塞到頁碼的href內的PageUrl處

        generalPageUrl(page)
        {
            return Url.Action("Index", new { page })
        }
    }
}
